// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace test.Evolution2.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UpsheetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Upsheet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Upsheet", "In order to ensure the upsheet works", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Upsheet")))
            {
                test.Evolution2.AcceptanceTests.Features.UpsheetFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("I am logged into evolution with username \"ashows\" and password \"sales5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Free Form Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "Chrome")]
        public virtual void ValidateFreeFormText_With_Chrome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Free Form Text", new string[] {
                        "Selenium"});
#line 8
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"Chrome\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 9
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table1.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table1.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 10
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter over the maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter over the maximum characters into the field:"); }
 testRunner.When("I enter over the maximum characters into the field:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "MaxCharacter"});
            table2.AddRow(new string[] {
                        "Lot Location",
                        "50"});
            table2.AddRow(new string[] {
                        "Last Name",
                        "100"});
            table2.AddRow(new string[] {
                        "First Name",
                        "30"});
            table2.AddRow(new string[] {
                        "TO Outcome",
                        "100"});
            table2.AddRow(new string[] {
                        "Coaching",
                        "100"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then I am told:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then I am told:"); }
#line 18
 testRunner.Then("I am told:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table3.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table3.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And The field should have the number of characters in it:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And The field should have the number of characters in it:"); }
            table3.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 27
 testRunner.And("The field should have the number of characters in it:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Free Form Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "AndroidChrome")]
        public virtual void ValidateFreeFormText_With_AndroidChrome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Free Form Text", new string[] {
                        "Selenium"});
#line 8
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"AndroidChrome\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 9
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table1.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table1.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 10
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter over the maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter over the maximum characters into the field:"); }
 testRunner.When("I enter over the maximum characters into the field:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "MaxCharacter"});
            table2.AddRow(new string[] {
                        "Lot Location",
                        "50"});
            table2.AddRow(new string[] {
                        "Last Name",
                        "100"});
            table2.AddRow(new string[] {
                        "First Name",
                        "30"});
            table2.AddRow(new string[] {
                        "TO Outcome",
                        "100"});
            table2.AddRow(new string[] {
                        "Coaching",
                        "100"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then I am told:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then I am told:"); }
#line 18
 testRunner.Then("I am told:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table3.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table3.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And The field should have the number of characters in it:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And The field should have the number of characters in it:"); }
            table3.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 27
 testRunner.And("The field should have the number of characters in it:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Free Form Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "IE")]
        public virtual void ValidateFreeFormText_With_IE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Free Form Text", new string[] {
                        "Selenium"});
#line 8
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"IE\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 9
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table1.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table1.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 10
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter over the maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter over the maximum characters into the field:"); }
 testRunner.When("I enter over the maximum characters into the field:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "MaxCharacter"});
            table2.AddRow(new string[] {
                        "Lot Location",
                        "50"});
            table2.AddRow(new string[] {
                        "Last Name",
                        "100"});
            table2.AddRow(new string[] {
                        "First Name",
                        "30"});
            table2.AddRow(new string[] {
                        "TO Outcome",
                        "100"});
            table2.AddRow(new string[] {
                        "Coaching",
                        "100"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then I am told:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then I am told:"); }
#line 18
 testRunner.Then("I am told:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table3.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table3.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And The field should have the number of characters in it:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And The field should have the number of characters in it:"); }
            table3.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 27
 testRunner.And("The field should have the number of characters in it:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Free Form Text")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "Firefox")]
        public virtual void ValidateFreeFormText_With_Firefox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Free Form Text", new string[] {
                        "Selenium"});
#line 8
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"Firefox\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 9
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table1.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table1.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table1.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 10
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter over the maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter over the maximum characters into the field:"); }
 testRunner.When("I enter over the maximum characters into the field:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description",
                        "MaxCharacter"});
            table2.AddRow(new string[] {
                        "Lot Location",
                        "50"});
            table2.AddRow(new string[] {
                        "Last Name",
                        "100"});
            table2.AddRow(new string[] {
                        "First Name",
                        "30"});
            table2.AddRow(new string[] {
                        "TO Outcome",
                        "100"});
            table2.AddRow(new string[] {
                        "Coaching",
                        "100"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then I am told:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then I am told:"); }
#line 18
 testRunner.Then("I am told:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table3.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table3.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table3.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And The field should have the number of characters in it:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And The field should have the number of characters in it:"); }
            table3.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 27
 testRunner.And("The field should have the number of characters in it:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "Chrome")]
        public virtual void ValidateSave_With_Chrome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Save", new string[] {
                        "Selenium"});
#line 36
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"Chrome\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 37
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table4.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table4.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 38
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter maximum characters into the field:"); }
 testRunner.When("I enter maximum characters into the field:", ((string)(null)), table4, "When ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I click the element \"#btnSave\""; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I click the element \"#btnSave\""); }
#line 47
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I wait \"2000\" milliseconds"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I wait \"2000\" milliseconds"); }
            testRunner.And("I click the element \"#btnSave\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the upsheet log"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the upsheet log"); }
 testRunner.And("I wait \"2000\" milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I find the last id created"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I find the last id created"); }
#line 49
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the specific upsheet url"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the specific upsheet url"); }
            testRunner.And("I navigate to the upsheet log", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then All the fields have the same values"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then All the fields have the same values"); }
 testRunner.And("I find the last id created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I navigate to the specific upsheet url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("All the fields have the same values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "AndroidChrome")]
        public virtual void ValidateSave_With_AndroidChrome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Save", new string[] {
                        "Selenium"});
#line 36
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"AndroidChrome\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 37
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table4.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table4.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 38
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter maximum characters into the field:"); }
 testRunner.When("I enter maximum characters into the field:", ((string)(null)), table4, "When ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I click the element \"#btnSave\""; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I click the element \"#btnSave\""); }
#line 47
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I wait \"2000\" milliseconds"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I wait \"2000\" milliseconds"); }
            testRunner.And("I click the element \"#btnSave\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the upsheet log"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the upsheet log"); }
 testRunner.And("I wait \"2000\" milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I find the last id created"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I find the last id created"); }
#line 49
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the specific upsheet url"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the specific upsheet url"); }
            testRunner.And("I navigate to the upsheet log", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then All the fields have the same values"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then All the fields have the same values"); }
 testRunner.And("I find the last id created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I navigate to the specific upsheet url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("All the fields have the same values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "IE")]
        public virtual void ValidateSave_With_IE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Save", new string[] {
                        "Selenium"});
#line 36
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"IE\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 37
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table4.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table4.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 38
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter maximum characters into the field:"); }
 testRunner.When("I enter maximum characters into the field:", ((string)(null)), table4, "When ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I click the element \"#btnSave\""; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I click the element \"#btnSave\""); }
#line 47
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I wait \"2000\" milliseconds"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I wait \"2000\" milliseconds"); }
            testRunner.And("I click the element \"#btnSave\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the upsheet log"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the upsheet log"); }
 testRunner.And("I wait \"2000\" milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I find the last id created"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I find the last id created"); }
#line 49
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the specific upsheet url"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the specific upsheet url"); }
            testRunner.And("I navigate to the upsheet log", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then All the fields have the same values"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then All the fields have the same values"); }
 testRunner.And("I find the last id created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I navigate to the specific upsheet url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("All the fields have the same values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Save")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Upsheet")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("WebDriver", "Firefox")]
        public virtual void ValidateSave_With_Firefox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Save", new string[] {
                        "Selenium"});
#line 36
this.ScenarioSetup(scenarioInfo);
 testRunner.Given("I am using the \"Firefox\" browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
this.FeatureBackground();
#line 37
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Given I go to the upsheet"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Given I go to the upsheet"); }
            testRunner.Given("I go to the upsheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "MaxCharacter",
                        "CssSelector"});
            table4.AddRow(new string[] {
                        "50",
                        "#txtLotLocation"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtLastName"});
            table4.AddRow(new string[] {
                        "30",
                        "#txtFirstName"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtTOOutcome"});
            table4.AddRow(new string[] {
                        "100",
                        "#txtCoaching"});
#line 38
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "When I enter maximum characters into the field:"; } else { testRunner.ScenarioContext.Add("CurrentStep", "When I enter maximum characters into the field:"); }
 testRunner.When("I enter maximum characters into the field:", ((string)(null)), table4, "When ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I click the element \"#btnSave\""; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I click the element \"#btnSave\""); }
#line 47
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I wait \"2000\" milliseconds"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I wait \"2000\" milliseconds"); }
            testRunner.And("I click the element \"#btnSave\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the upsheet log"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the upsheet log"); }
 testRunner.And("I wait \"2000\" milliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I find the last id created"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I find the last id created"); }
#line 49
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "And I navigate to the specific upsheet url"; } else { testRunner.ScenarioContext.Add("CurrentStep", "And I navigate to the specific upsheet url"); }
            testRunner.And("I navigate to the upsheet log", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 if (testRunner.ScenarioContext.ContainsKey("CurrentStep")) { testRunner.ScenarioContext["CurrentStep"] = "Then All the fields have the same values"; } else { testRunner.ScenarioContext.Add("CurrentStep", "Then All the fields have the same values"); }
 testRunner.And("I find the last id created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I navigate to the specific upsheet url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("All the fields have the same values", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
